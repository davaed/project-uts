import { Fragment } from 'react'
import Head from 'next/head'

import { MongoClient } from 'mongodb'

import MenuContent from '../../components/go-food/MenuContent.component'

function RestaurantMenus({ restaurant }) {
  return (
    <Fragment>
      <Head>
        <title>GO-FOOD - {restaurant.name}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <MenuContent restaurant={restaurant} />
    </Fragment>
  )
}

export async function getStaticPaths() {
  const client = await MongoClient.connect(
    `mongodb+srv://${process.env.MONGODB_USERNAME}:${process.env.MONGODB_PASSWORD}@cluster0.ec2ky.mongodb.net/${process.env.MONGODB_DATABASE}?retryWrites=true&w=majority`
  )
  const db = client.db()
  const collections = db.collection('go-food')
  const restaurants = await collections.find().toArray()
  client.close()

  const paths = restaurants.map((item) => ({
    params: { restaurant: item.name },
  }))

  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps(context) {
  const param = context.params.restaurant

  const client = await MongoClient.connect(
    `mongodb+srv://${process.env.MONGODB_USERNAME}:${process.env.MONGODB_PASSWORD}@cluster0.ec2ky.mongodb.net/${process.env.MONGODB_DATABASE}?retryWrites=true&w=majority`
  )
  const db = client.db()
  const collections = db.collection('go-food')
  const restaurants = await collections.findOne({ name: param })
  client.close()

  return {
    props: {
      restaurant: { ...restaurants, _id: restaurants._id.toString() },
    },
    revalidate: 1,
  }
}

export default RestaurantMenus
