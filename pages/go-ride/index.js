import { Fragment, useState } from 'react'
import Head from 'next/head'
import dynamic from 'next/dynamic'

import Layout from '../../components/common/Layout'
import Modal from '../../components/Modal'
import ConfirmButton from '../../components/common/ConfirmButton'

const DynamicMapComponent = dynamic(() => import('../../components/Map'), {
  ssr: false,
})

function ItemMenus({ selectedCoordinates, setListCoordinates }) {
  function removeSelectedCoordinates(index) {
    setListCoordinates(
      selectedCoordinates.filter((_, point) => point !== index)
    )
  }

  return selectedCoordinates.map((item, index) => (
    <div
      className='grid grid-cols-1 sm:grid-cols-2 cursor-pointer border border-[#eaeaea] rounded-md hover:border-[crimson] hover:text-[crimson] p-2 px-3 m-4'
      key={index}
      onClick={() => removeSelectedCoordinates(index)}
    >
      <div className='col-span-1 flex flex-col justify-start'>
        <p>
          <span className='font-semibold'>From:</span> Your Home
        </p>
        <p className='font-semibold'>Destination:</p>
        <p className='space-x-1'>
          <span>{item.destination.address}</span>
          <span className='italic'>Street/Place</span>
        </p>
      </div>
      <div className='col-span-1 flex justify-end font-semibold sm:font-normal mt-3 sm:mt-0'>
        Rp. {item.price}
      </div>
    </div>
  ))
}

export default function GoRide(props) {
  const [isConfirmed, setIsConfirmed] = useState(false)
  const [coordinates, setCoordinates] = useState({
    pickUpPoint: { lat: 0, lng: 0, updated: false, address: '' },
    destination: { lat: 0, lng: 0, updated: false, address: '' },
    price: 0,
  })
  const [listCoordinates, setListCoordinates] = useState([])

  return (
    <Fragment>
      <Head>
        <title>GO-RIDE - NOT GOJEK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Layout
        page={'go food application'}
        description={
          "Without a driver's license, you can drive wherever you want and travel wherever you want."
        }
      >
        {isConfirmed && (
          <Modal
            totalPrice={listCoordinates.reduce(
              (acc, item) => acc + item.price,
              0
            )}
            setIsConfirmed={setIsConfirmed}
          >
            <ItemMenus
              selectedCoordinates={listCoordinates}
              setListCoordinates={setListCoordinates}
            />
          </Modal>
        )}

        <ConfirmButton
          itemsLength={listCoordinates.length}
          setIsConfirmed={setIsConfirmed}
          title={'Please begin by selecting your destination.'}
        />
        <div className='mb-4 mx-5 lg:mx-10'>
          <DynamicMapComponent
            APIKEY={props.APIKEY}
            coordinates={coordinates}
            setCoordinates={setCoordinates}
            listCoordinates={listCoordinates}
            setListCoordinates={setListCoordinates}
          />
        </div>
      </Layout>
    </Fragment>
  )
}

export function getStaticProps() {
  return {
    props: {
      APIKEY: process.env.MAPQUESTAPI,
    },
  }
}
